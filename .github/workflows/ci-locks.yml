# Reference:
#   - https://github.com/actions/cache
#   - https://github.com/actions/checkout
#   - https://github.com/actions/download-artifact
#   - https://github.com/actions/upload-artifact
#   - https://github.com/conda-incubator/setup-miniconda

name: ci-locks

on:
  workflow_dispatch:
  schedule:
    - cron: "3 0 * * 1"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-locks:
    name: "${{ matrix.session }} (${{ matrix.version }})"

    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash -l {0}

    env:
      ENV_NAME: "ci-locks"

    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest"]
        version: ["py38", "py39", "py310"]
        session: ["lock"]

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: "environment configure"
      env:
        # Maximum cache period (in weeks) before forcing a cache refresh.
        CACHE_WEEKS: 2
      run: |
        echo "CACHE_PERIOD=$(date +%Y).$(expr $(date +%U) / ${CACHE_WEEKS})" >> ${GITHUB_ENV}

    - name: "conda package cache"
      uses: ./.github/workflows/composite/conda-pkg-cache
      with:
        cache_build: 0
        cache_period: ${{ env.CACHE_PERIOD }}
        env_name: ${{ env.ENV_NAME }}

    - name: "conda install"
      uses: conda-incubator/setup-miniconda@v2
      with:
        miniforge-version: latest
        channels: conda-forge,defaults
        activate-environment: ${{ env.ENV_NAME }}
        auto-update-conda: false
        use-only-tar-bz2: true

    - name: "conda environment cache"
      uses: ./.github/workflows/composite/conda-env-cache
      with:
        cache_build: 0
        cache_period: ${{ env.CACHE_PERIOD }}
        env_name: ${{ env.ENV_NAME }}
        install_packages: "pip tox"

    - name: "conda info"
      run: |
        conda info
        conda list

    - name: "tox cache"
      uses: ./.github/workflows/composite/tox-cache
      with:
        cache_build: 0

    - name: "${{ matrix.session }} (${{ matrix.version }})"
      run: |
        tox -e ${{ matrix.version }}-${{ matrix.session }} -- --platform osx-64 --platform win-64

    - uses: actions/upload-artifact@v3
      with:
        name: lock-artifacts
        path: ${{ github.workspace }}/requirements/locks/${{ matrix.version }}*.txt


  create-pr:
    needs: build-locks
    name: "create pull-request"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - uses: actions/download-artifact@v3
      with:
        name: lock-artifacts
        path: ${{ github.workspace }}/requirements/locks

    - name: "generate token"
      uses: tibdex/github-app-token@v1
      id: generate-token
      with:
        app_id: ${{ secrets.AUTH_APP_ID }}
        private_key: ${{ secrets.AUTH_APP_PRIVATE_KEY }}

    - name: "generate pull-request"
      id: cpr
      uses: peter-evans/create-pull-request@171dd555b9ab6b18fa02519fdfacbb8bf671e1b4
      with:
        token: ${{ steps.generate-token.outputs.token }}
        add-paths: ${{ github.workspace }}/requirements/locks/*.txt
        commit-message: "updated conda lock files"
        branch: conda-lock-auto-update
        delete-branch: true
        title: "[geovista.ci] conda lock auto-update"
        body: |
          ðŸ¤– Bleep! Bloop!
          
          Conda lock files auto-updated to latest resolved environment for `geovista` dependencies.
        labels: |
          new: pull request
          bot

    - name: "show pull-request"
      if: steps.cpr.outputs.pull-request-number != ''
      run: |
        echo "pull-request #${{ steps.cpr.outputs.pull-request-number }}"
        echo "pull-request URL ${{ steps.cpr.outputs.pull-request-url }}"
        echo "pull-request operation [${{ steps.cpr.outputs.pull-request-operation }}]"
        echo "pull-request SHA ${{ steps.cpr.outputs.pull-request-head-sha }}"
