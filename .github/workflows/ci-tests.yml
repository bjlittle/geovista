# Reference:
#   - https://github.com/actions/checkout
#   - https://github.com/actions/download-artifact
#   - https://github.com/actions/setup-python
#   - https://github.com/actions/upload-artifact
#   - https://github.com/codecov/codecov-action
#   - https://github.com/prefix-dev/setup-pixi
#   - https://github.com/pyvista/setup-headless-display-action

name: ci-tests

on:
  pull_request:

  push:
    branches:
      - "main"
      - "v*x"
      - "!pixi-auto-update"
      - "!pre-commit-ci-update-config"
      - "!dependabot/*"
    tags:
      - "v*"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash -l {0}

jobs:
  tests:
    name: "${{ matrix.session }} ${{ matrix.marker }} (${{ matrix.version }})"
    runs-on: "${{ matrix.os }}"

    env:
      ALLOW_PLOTTING: true
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-22.04"]
        version: ["py311", "py312"]
        session: ["tests"]
        marker: ["image", "not image"]
        include:
          - version: "py312"
            coverage: "--cov-report= --cov=geovista"

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: "environment configure"
        env:
          # Maximum cache period (in weeks) before forcing a cache refresh.
          CACHE_WEEKS: 2
        run: |
          echo "CACHE_PERIOD=$(date +%Y).$(expr $(date +%U) / ${CACHE_WEEKS})" >> ${GITHUB_ENV}

      - uses: pyvista/setup-headless-display-action@7d84ae825e6d9297a8e99bdbbae20d1b919a0b19

      - name: "setup pixi"
        uses: prefix-dev/setup-pixi@14c8aabd75893f83f4ab30c03e7cf853c8208961
        with:
          environments: "test-${{ matrix.version }}"
          frozen: true
          activate-environment: true

      - name: "cartopy cache"
        uses: ./.github/workflows/composite/cartopy-cache
        with:
          cache_period: ${{ env.CACHE_PERIOD }}

      - name: "geovista cache"
        uses: ./.github/workflows/composite/geovista-cache
        with:
          cache_period: ${{ env.CACHE_PERIOD }}

      - name: "${{ matrix.session }} ${{ matrix.marker }} (${{ matrix.version }})"
        env:
          PY_COLORS: "1"
        run: |
          xvfb-run -a pixi run --frozen pytest -m "${{ matrix.marker }}" --fail_extra_image_cache --generated_image_dir test_images ${{ matrix.coverage }}

      - name: "upload test images"
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: test-images-${{ github.job }}-${{ strategy.job-index }}
          path: ${{ github.workspace }}/test_images

      - name: "prepare coverage"
        if: ${{ matrix.coverage }}
        run: |
          mv .coverage ci-test-coverage${{ strategy.job-index }}

      - if: ${{ matrix.coverage }}
        uses: actions/upload-artifact@v4
        with:
          name: coverage-artifacts-${{ github.job }}-${{ strategy.job-index }}
          path: ${{ github.workspace }}/ci-test-coverage*


  coverage:
    needs: [tests]
    name: "upload coverage"
    runs-on: "ubuntu-latest"

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - run: |
          python -m pip install --upgrade pip
          pip install coverage

      - uses: actions/download-artifact@v4
        with:
          pattern: coverage-artifacts-*
          merge-multiple: true

      - name: "create coverage report"
        run: |
          coverage combine ci-test-coverage*
          coverage xml --omit=*/_version.py

      - name: "upload coverage report"
        uses: codecov/codecov-action@18283e04ce6e62d37312384ff67231eb8fd56d24
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
