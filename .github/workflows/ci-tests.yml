# Reference:
#   - https://github.com/actions/cache
#   - https://github.com/actions/checkout
#   - https://github.com/conda-incubator/setup-miniconda

name: ci-tests

on:
  pull_request:
    branches:
      - "*"

  push:
    branches-ignore:
      - "conda-lock-auto-update"
      - "pre-commit-ci-update-config"
      - "dependabot/*"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  tests:
    name: "${{ matrix.session }} (${{ matrix.version }} ${{ matrix.os }})"

    runs-on: ${{ matrix.os }}

    defaults:
      run:
        shell: bash -l {0}

    env:
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      ENV_NAME: "ci-tests"

    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest"]
        version: ["py311"]
        #session: ["tests", "doc-build", "doc-linkcheck", "doc-tests"]
        session: ["tests"]
        include:
          - os: "ubuntu-latest"
            version: "py38"
            session: "tests"
            platform: "linux"
          - os: "ubuntu-latest"
            version: "py39"
            session: "tests"
            platform: "linux"
          - os: "ubuntu-latest"
            version: "py310"
            session: "tests"
            platform: "linux"
          - os: "ubuntu-latest"
            version: "py311"
            session: "tests"
            platform: "linux"
            posargs: "--cov-report=xml --cov"
            post-command: "codecov"
          #- os: "ubuntu-latest"
          #  platform: "linux"

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: configure headless display
      uses: pyvista/setup-headless-display-action@v1

    - name: configure mesa egl
      run: |
        sudo apt-get update
        sudo apt-get install -y libegl-dev

    - name: "environment configure"
      env:
        # Maximum cache period (in weeks) before forcing a cache refresh.
        CACHE_WEEKS: 2
      run: |
        echo "CACHE_PERIOD=$(date +%Y).$(expr $(date +%U) / ${CACHE_WEEKS})" >> ${GITHUB_ENV}
        echo "LOCK_FILE=requirements/locks/${{ matrix.version }}-lock-${{ matrix.platform }}-64.txt" >> ${GITHUB_ENV}

    - name: "conda package cache"
      uses: ./.github/workflows/composite/conda-pkg-cache
      with:
        cache_build: 0
        cache_period: ${{ env.CACHE_PERIOD }}
        env_name: ${{ env.ENV_NAME }}

    - name: "conda install"
      uses: conda-incubator/setup-miniconda@v2
      with:
        miniforge-version: latest
        channels: conda-forge,defaults
        channel-priority: true
        auto-update-conda: true
        activate-environment: ${{ env.ENV_NAME }}
        use-only-tar-bz2: false

    - name: "conda environment cache"
      uses: ./.github/workflows/composite/conda-env-cache
      with:
        cache_build: 1
        cache_period: ${{ env.CACHE_PERIOD }}
        env_name: ${{ env.ENV_NAME }}
        install_packages: "cartopy pip 'tox<4'"

    - name: "conda info"
      run: |
        conda info
        conda list

    - name: "cartopy cache"
      uses: ./.github/workflows/composite/cartopy-cache
      with:
        cache_build: 0
        cache_period: ${{ env.CACHE_PERIOD }}
        env_name: ${{ env.ENV_NAME }}

    - name: "tox cache"
      uses: ./.github/workflows/composite/tox-cache
      with:
        cache_build: 0
        lock_file: ${{ env.LOCK_FILE }}

    - name: "check mesa"
      run: |
        ldconfig -p | grep -i libegl

    - name: "${{ matrix.session }} (${{ matrix.version }} ${{ matrix.os }})"
      env:
        POST_COMMAND: ${{ matrix.post-command }}
      run: |
        tox -e ${{ matrix.version }}-${{ matrix.platform }}-${{ matrix.session }} -- ${{ matrix.posargs }}
