name: "geovista-cache"
description: "create and cache the geovista assets"

inputs:
  cache_period:
    description: "geovista assets cache timestamp"
    required: true
  pixi_environment:
    description: "pixi environment to use for geovista"
    required: false
    default: ""


runs:
  using: "composite"
  steps:
    - name: "get geovista-data version"
      shell: bash
      id: geovista-data
      env:
        INPUTS_PIXI_ENVIRONMENT: "${{ inputs.pixi_environment }}"
      run: |
        if [ -z "${INPUTS_PIXI_ENVIRONMENT}" ]; then
          # Use the active pixi environment if none is specified
          echo "version=$(pixi run --frozen geovista --data-version)" >> ${GITHUB_OUTPUT}
        else
          # Use the specified pixi environment
          echo "version=$(pixi run --frozen --environment ${INPUTS_PIXI_ENVIRONMENT} geovista --data-version )" >> ${GITHUB_OUTPUT}
        fi

    - name: "check geovista cache"
      uses: actions/cache@v4
      id: geovista-cache
      with:
        path: ~/.cache/geovista
        key: ${{ runner.os }}-geovista-data-${{ steps.geovista-data.outputs.version }}-${{ inputs.cache_period }}

    - name: "refresh geovista cache"
      if: steps.geovista-cache.outputs.cache-hit != 'true'
      shell: bash
      run: |
        pixi run --frozen geovista download --all --decompress
