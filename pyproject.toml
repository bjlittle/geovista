[build-system]
# Defined by PEP 518
requires = [
    "setuptools>=61",
    "setuptools_scm[toml]>=7",
]
# Defined by PEP 517
build-backend = "setuptools.build_meta"


[project]
authors = [
    {name = "GeoVista Contributors", email = "geovista.pub@gmail.com"}
]
classifiers = [
    "Development Status :: 1 - Planning",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Atmospheric Science",
]
description = "Cartographic rendering and mesh analytics powered by PyVista"
dynamic = [
    "dependencies",
    "optional-dependencies",
    "readme",
    "version",
]
keywords = [
    "cartography",
    "curvilinear",
    "earth-science",
    "grid",
    "mesh",
    "python",
    "pyvista",
    "rectilinear",
    "ugrid",
    "unstructured",
    "vtk",
]
license.file = "LICENSE"
name = "geovista"
requires-python = ">=3.10"


[project.urls]
Code = "https://github.com/bjlittle/geovista"
Discussions = "https://github.com/bjlittle/geovista/discussions"
Issues = "https://github.com/bjlittle/geovista/issues"


[project.scripts]
geovista = "geovista.cli:main"


[tool.check-manifest]
ignore = [
    "src/geovista/_version.py",
]


[tool.codespell]
ignore-words-list = "whet,projets"
skip = ".git,*.ipynb"


[tool.pytest.ini_options]
addopts = [
    "--doctest-continue-on-failure",
    "--doctest-modules",
    "--import-mode=importlib",
    "-ra",
    "--strict-config",
    "--strict-markers",
    "-v",
]
doctest_optionflags = "NORMALIZE_WHITESPACE ELLIPSIS NUMBER"
filterwarnings = [
    "error",
    "ignore:numpy.ndarray size changed:RuntimeWarning",
    "ignore:geovista unable to remesh 1 cell:UserWarning",
    "ignore:pyvista test cache image dir:UserWarning",
    "ignore:pyvista test generated image dir:UserWarning",
]
image_cache_dir = "tests/plotting/image_cache"
log_cli = "True"
log_cli_level = "INFO"
markers = [
    "image: plotter rendering image test",
]
minversion = "6.0"
required_plugins = "pytest-mock pytest_pyvista"
testpaths = "tests"
xfail_strict = "True"


[tool.ruff]
extend-exclude = ["docs"]
line-length = 88
src = ["src", "tests"]
target-version = "py310"


[tool.ruff.format]
preview = false


[tool.ruff.lint]
ignore = [
    # NOTE: Non-permanent exclusions should be added to ".ruff.toml".

    # flake8-annotations (ANN)
    "ANN101",  # Missing type annotation for 'self' in method.
    "ANN102",  # Missing type annotation for 'cls' in classmethod.

    # flake8-commas (COM)
    "COM812",  # Trailing comma missing.
    "COM819",  # Trailing comma prohibited.

    # pydocstyle (D)
    "D105",  # Missing docstring in magic method.

    # flake8-fixme (FIX)
    "FIX002",  # Line contains TODO, consider resolving the issue.

    # flake8-implicit-str-concat (ISC)
    "ISC001",  # Implicitly concatenate string literals on one line.

    # pep8-naming
    "N806",  # Variable name in function should be lowercase.
    "N999",  # Invalid module name.

    # pandas-vet (PD)
    "PD",

    # Ruff-specific rules (RUF)
    "RUF005",  # Consider {expression} instead of concatenation.

    # flake8-bandit (S)
    "S101",  # Use of assert detected.
]
preview = false
select = [
    "ALL",
]


[tool.ruff.lint.isort]
force-sort-within-sections = true
known-first-party = ["geovista"]
required-imports = ["from __future__ import annotations"]


[tool.ruff.lint.mccabe]
max-complexity = 26


[tool.ruff.lint.per-file-ignores]
"src/geovista/cli.py" = [
    "T201",  # flake8-print: print found.
]
"src/geovista/examples/*.py" = [
    "TCH002",  # flake8-type-checking: Move 3rd-party import into a type checking block.
]
"src/geovista/examples/earthquakes.py" = [
    "E501",  # pycodestyle: Line too long.
]
"src/geovista/examples/earthquakes_wink1.py" = [
    "E501",  # pycodestyle: Line too long.
]


[tool.ruff.lint.pydocstyle]
convention = "numpy"


[tool.setuptools]
license-files = ["LICENSE"]
zip-safe = false


[tool.setuptools.dynamic]
dependencies = {file = ["requirements/pypi-core.txt"]}
readme = {file = "README.md", content-type = "text/markdown"}


[tool.setuptools.dynamic.optional-dependencies]
cmap = {file = ["requirements/pypi-optional-cmap.txt"]}
docs = {file = ["requirements/pypi-optional-docs.txt"]}
exam = {file = ["requirements/pypi-optional-exam.txt"]}
test = {file = ["requirements/pypi-optional-test.txt"]}


[tool.setuptools.packages.find]
include = ["geovista*"]
where = ["src"]


[tool.setuptools_scm]
write_to = "src/geovista/_version.py"
local_scheme = "dirty-tag"
version_scheme = "release-branch-semver"
